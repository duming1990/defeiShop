<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ROLE_USER">

	<typeAlias alias="roleUser" type="com.ebiz.webapp.domain.RoleUser" />

	<cacheModel id="oneDayCache" type="OSCACHE">
		<flushInterval hours="24" />
		<flushOnExecute statement="insertRoleUser" />
		<flushOnExecute statement="updateRoleUser" />
		<flushOnExecute statement="deleteRoleUser" />
	</cacheModel>

	<resultMap id="roleUserResultForList" class="roleUser">
		<result column="ID" property="id" jdbcType="INTEGER" />
		<result column="ROLE_ID" property="role_id" jdbcType="INTEGER" />
		<result column="USER_ID" property="user_id" jdbcType="INTEGER" />
		<result column="USER_ORDER_VALUE" property="user_order_value" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="roleUserResult" class="roleUser" extends="roleUserResultForList">
	</resultMap>
	<resultMap id="roleUserResultWithUserName" class="roleUser" extends="roleUserResultForList">
	<result column="USER_NAME" property="map.user_name" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="roleUserResultWithUserNameAndMobile" class="roleUser" extends="roleUserResultForList">
	<result column="USER_NAME" property="map.user_name" jdbcType="VARCHAR" />
	<result column="MOBILE" property="map.mobile" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="sf-roleUser">
		<isNotEmpty prepend=" and " property="id">ID = #id:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="role_id">ROLE_ID = #role_id:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="user_id">USER_ID = #user_id:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="user_order_value">USER_ORDER_VALUE = #user_order_value:INTEGER#</isNotEmpty>
		
		<isNotEmpty prepend=" and " property="user_id">USER_ID = #user_id:INTEGER#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_id_not_in">USER_ID not in($map.user_id_not_in$)</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_name_like">b.USER_NAME like '%'  #map.user_name_like#  '%'</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.mobile_like">b.mobile like '%'  #map.mobile_like#  '%'</isNotEmpty>
	</sql>

	<select id="selectRoleUser" resultMap="roleUserResult" parameterClass="roleUser" cacheModel="oneDayCache">
		select * from ROLE_USER where 1 = 1
		<include refid="sf-roleUser" />
	</select>

	<select id="selectRoleUserList" resultMap="roleUserResultWithUserName" parameterClass="roleUser" cacheModel="oneDayCache">
		select a.*,(select b.user_name from user_info b where a.USER_ID = b.id) as user_name from ROLE_USER a
		where 1=1
		<include refid="sf-roleUser" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">
			limit 0, #row.count#
		</isNotEmpty>
	</select>

	<select id="selectRoleUserCount" resultClass="int" parameterClass="roleUser" cacheModel="oneDayCache">
		select count(*) from ROLE_USER a 
		left join user_info b on a.user_id = b.id
		where 1 = 1
		<include refid="sf-roleUser" />
	</select>

	<select id="selectRoleUserPaginatedList" resultMap="roleUserResultWithUserNameAndMobile" parameterClass="roleUser" cacheModel="oneDayCache">
		
		select a.*,b.user_name,b.mobile from ROLE_USER a
		left join user_info b on a.user_id = b.id
		where 1 = 1
		<include refid="sf-roleUser" />
		<!-- order by ID asc -->
		<isNotEmpty property="row.count">limit #row.first#, #row.count#</isNotEmpty>
	</select>

	<insert id="insertRoleUser" parameterClass="roleUser">
		<![CDATA[insert into ROLE_USER (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">ID</isNotNull>	
			<isNotNull prepend="," property="role_id">ROLE_ID</isNotNull>	
			<isNotNull prepend="," property="user_id">USER_ID</isNotNull>	
			<isNotNull prepend="," property="user_order_value">USER_ORDER_VALUE</isNotNull>	
		</dynamic>
		<![CDATA[) values (]]>
		<dynamic prepend=" ">
			<isNotNull prepend="," property="id">#id:INTEGER#</isNotNull>
			<isNotNull prepend="," property="role_id">#role_id:INTEGER#</isNotNull>
			<isNotNull prepend="," property="user_id">#user_id:INTEGER#</isNotNull>
			<isNotNull prepend="," property="user_order_value">#user_order_value:INTEGER#</isNotNull>
		</dynamic>
		<![CDATA[)]]>
		<selectKey resultClass="int" keyProperty="id">SELECT LAST_INSERT_ID()</selectKey>
	</insert>

	<update id="updateRoleUser" parameterClass="roleUser">
		update ROLE_USER
		<dynamic prepend="set">
			<isNotNull prepend="," property="id">ID = #id:INTEGER#</isNotNull>
			<isNotNull prepend="," property="role_id">ROLE_ID = #role_id:INTEGER#</isNotNull>
			<isNotNull prepend="," property="user_id">USER_ID = #user_id:INTEGER#</isNotNull>
			<isNotNull prepend="," property="user_order_value">USER_ORDER_VALUE = #user_order_value:INTEGER#</isNotNull>
		</dynamic>
		where
		<isNotEmpty prepend=" " property="id">ID = #id#</isNotEmpty>
		<isEmpty prepend=" " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</update>

	<delete id="deleteRoleUser" parameterClass="roleUser">
		delete from ROLE_USER where 1 = 1
		<isNotEmpty prepend=" and " property="id">ID = #id#</isNotEmpty>
		<isNotEmpty prepend=" and " property="role_id">ROLE_ID = #role_id#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.role_id">ROLE_ID = #map.role_id#</isNotEmpty>
		<isNotEmpty prepend=" and " property="map.user_id">USER_ID = #map.user_id#</isNotEmpty>
		<isEmpty prepend=" and " property="id">
			<isNotEmpty prepend=" " property="map.pks">
				ID in
				<iterate close=")" open="(" conjunction="," property="map.pks">#map.pks[]#</iterate>
			</isNotEmpty>
		</isEmpty>
	</delete>

</sqlMap>